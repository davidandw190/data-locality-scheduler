schedulerName: "data-locality-scheduler"
podQueueSize: 100
healthServerPort: 8080
refreshInterval: "5m"

# filtering options
percentageOfNodesToScore: 100
minFeasibleNodesToFind: 100
maxFailedAttempts: 5

# caching options
resourceCacheEnabled: true
resourceCacheExpiration: "30s"
storageCacheExpiration: "5m"

# default weights
resourceWeight: 0.15
nodeAffinityWeight: 0.10
nodeTypeWeight: 0.15
capabilitiesWeight: 0.10
dataLocalityWeight: 0.50

# data-intensive weights
dataIntensiveResourceWeight: 0.10
dataIntensiveNodeAffinityWeight: 0.05
dataIntensiveNodeTypeWeight: 0.10
dataIntensiveCapabilitiesWeight: 0.05
dataIntensiveDataLocalityWeight: 0.70

# compute-intensive weights
computeIntensiveResourceWeight: 0.40
computeIntensiveNodeAffinityWeight: 0.15
computeIntensiveNodeTypeWeight: 0.10
computeIntensiveCapabilitiesWeight: 0.15
computeIntensiveDataLocalityWeight: 0.20

localBandwidth: 1000000000 # 1 GB/s
sameZoneBandwidth: 600000000 # 600 MB/s
sameRegionBandwidth: 200000000 # 200 MB/s
crossRegionBandwidth: 50000000 # 50 MB/s
edgeCloudBandwidth: 25000000 # 25 MB/s

# latency settings in milliseconds
localLatency: 0.1
sameZoneLatency: 1.0
sameRegionLatency: 5.0
crossRegionLatency: 30.0
edgeCloudLatency: 40.0

# node scoring options
minResourceScore: 0
maxResourceScore: 100
defaultScore: 50

# debug options
verboseLogging: true
detailedMetrics: true
